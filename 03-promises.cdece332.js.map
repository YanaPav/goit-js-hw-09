{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAEtDA,EAAM,G,CAdCQ,SAASC,cAAc,SAC/BC,iBAAiB,UAmBtB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAaC,OAAOH,EAAEI,cAAcC,SAAShB,MAAMiB,OACnDC,EAAYJ,OAAOH,EAAEI,cAAcC,SAASG,KAAKF,OACjDG,EAASN,OAAOH,EAAEI,cAAcC,SAASI,OAAOH,OAEtD,IAAKI,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAC9B,MAAMF,EAAON,EAAaK,EAAYG,EAGpCvB,EAFeuB,EAAI,EAEKF,GACvBG,MAAKL,IAAWM,EAAA3B,GAAS4B,OAAOC,QAAQR,EAAM,IAC9CS,OAAMC,IAAWJ,EAAA3B,GAAS4B,OAAOI,QAAQD,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'\n\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onFormSubmit)\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);    \n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    },delay)\n    \n  })\n  \n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault()\n  const firstDelay = Number(e.currentTarget.elements.delay.value)\n  const stepValue = Number(e.currentTarget.elements.step.value)\n  const amount = Number(e.currentTarget.elements.amount.value)\n\n  for (i = 0; i < amount; i += 1) {\n    const step = firstDelay + stepValue * i\n    const position = i + 1\n    \n      createPromise(position, step)\n      .then(value => { Notiflix.Notify.success(value) })\n      .catch(error => { Notiflix.Notify.failure(error) })  \n  }\n\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","firstDelay","Number","currentTarget","elements","value","stepValue","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.cdece332.js.map"}